from PIL import Image

def encrypt_image(image_path, encryption_key):
    img = Image.open(image_path)
    pixels = img.load()

    width, height = img.size

    encrypted_pixels = []
    for y in range(height):
        for x in range(width):
            r, g, b = pixels[x, y]
            r = (r + encryption_key) % 256
            g = (g + encryption_key) % 256
            b = (b + encryption_key) % 256
            encrypted_pixels.append((r, g, b))

    encrypted_img = Image.new(img.mode, img.size)
    encrypted_img.putdata(encrypted_pixels)
    encrypted_img.save("encrypted_image.png")
    print("Image encrypted successfully.")

def decrypt_image(image_path, encryption_key):
    img = Image.open(image_path)
    pixels = img.load()

    width, height = img.size

    decrypted_pixels = []
    for y in range(height):
        for x in range(width):
            r, g, b = pixels[x, y]
            r = (r - encryption_key) % 256
            g = (g - encryption_key) % 256
            b = (b - encryption_key) % 256
            decrypted_pixels.append((r, g, b))

    decrypted_img = Image.new(img.mode, img.size)
    decrypted_img.putdata(decrypted_pixels)
    decrypted_img.save("decrypted_image.png")
    print("Image decrypted successfully.")

def main():
    image_path = input("Enter the path to the image: ")
    encryption_key = int(input("Enter the encryption key: "))

    encrypt_image(image_path, encryption_key)

    decryption_key = int(input("Enter the decryption key: "))
    decrypt_image("encrypted_image.png", decryption_key)

if __name__ == "__main__":
    main()
